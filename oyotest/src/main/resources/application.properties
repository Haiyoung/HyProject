# 应用上下文配置
server.port=8080
server.servlet.context-path=/oyotest

# 数据库配置
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/haiyoung?useSSL=true&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=

# sharding-jdbc配置
sharding.jdbc.datasource.names=db-0,db-1
# database_0
sharding.jdbc.datasource.db-0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.db-0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db-0.url=jdbc:mysql://localhost:3306/database_0
sharding.jdbc.datasource.db-0.username=root
sharding.jdbc.datasource.db-0.password=

# database_1
sharding.jdbc.datasource.db-1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.db-1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db-1.url=jdbc:mysql://localhost:3306/database_1
sharding.jdbc.datasource.db-1.username=root
sharding.jdbc.datasource.db-1.password=

# 默认的分库策略：task_id为奇数-->数据库db_1,task_id为偶数-->数据库db_0
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=db-$->{user_id % 2}


# 这里的t_order是逻辑表，由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式
sharding.jdbc.config.sharding.tables.task.actual-data-nodes=db-$->{0..1}.task_$->{0..1}
# 行表达式分片策略
sharding.jdbc.config.sharding.tables.task.table-strategy.inline.sharding-column=task_id
sharding.jdbc.config.sharding.tables.task.table-strategy.inline.algorithm-expression=task_$->{task_id % 2}

# 是否开启SQL显示，默认值: false
sharding.jdbc.config.props.sql.show=true

mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

